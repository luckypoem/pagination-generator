{"version":3,"file":"index.umd.js","sources":["index.js"],"sourcesContent":["\"use strict\";\n\n/**\n * @type PaginationItem\n * @param {Object} item\n * @param {string} item.type - enum: \"nav\", \"num\"\n * @param {string} item.name\n * @param {number} item.value\n * @param {boolean} [item.disabled]\n * @param {boolean} [item.current]\n */\n\n/**\n * @param {number} current - current cursor\n * @param {number} total - total pages\n * @param {number} limit - number of pagintation items\n * @return {PaginationItem[]}\n */\nexport default function paginationGenerator(current, total, limit) {\n    current = Math.min(total, Math.max(1, current));\n    let first = {\n        type: \"nav\",\n        name: \"first\",\n        value: 1,\n        disabled: current === 1,\n    };\n    let last = {\n        type: \"nav\",\n        name: \"last\",\n        value: total,\n        disabled: current === total,\n    };\n    let prev = {\n        type: \"nav\",\n        name: \"prev\",\n        value: Math.max(1, current - 1),\n        disabled: current === 1,\n    };\n    let next = {\n        type: \"nav\",\n        name: \"next\",\n        value: Math.min(current + 1, total),\n        disabled: current === total,\n    };\n    if (limit < 3) {\n        return [prev, next];\n    } else if (limit < 4) {\n        return [prev, {\n            type: \"num\",\n            name: current,\n            value: current,\n            current: true,\n        }, next];\n    } else if (limit < 5) {\n        return [first, prev, next, last];\n    }\n    let start = 1, end = total;\n    let before = [], after = [];\n    if (total > limit) {\n        before = [first, prev];\n        after = [next, last];\n        limit -= 4;\n        let half = Math.floor(limit / 2);\n        if (current <= half) {\n            end = limit;\n        } else if (current >= total - half) {\n            start = total - limit + 1;\n        } else {\n            start = current - half;\n            end = start + limit - 1;\n        }\n    }\n    let pages = [];\n    for (let i = start; i <= end; i++) {\n        pages.push({\n            type: \"num\",\n            name: i,\n            value: i,\n            current: i === current,\n        });\n    }\n    return before.concat(pages, after);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAe,SAAS,mBAAT,CAA6B,OAA7B,EAAsC,KAAtC,EAA6C,KAA7C,EAAoD;AAC/D,IAAA,cAAU,KAAK,GAAL,CAAS,KAAT,EAAgB,KAAK,GAAL,CAAS,CAAT,EAAY,OAAZ,CAAhB,CAAV,CAD+D;AAE/D,IAAA,QAAI,QAAQ;AACR,IAAA,cAAM,KAAN;AACA,IAAA,cAAM,OAAN;AACA,IAAA,eAAO,CAAP;AACA,IAAA,kBAAU,YAAY,CAAZ;SAJV,CAF2D;AAQ/D,IAAA,QAAI,OAAO;AACP,IAAA,cAAM,KAAN;AACA,IAAA,cAAM,MAAN;AACA,IAAA,eAAO,KAAP;AACA,IAAA,kBAAU,YAAY,KAAZ;SAJV,CAR2D;AAc/D,IAAA,QAAI,OAAO;AACP,IAAA,cAAM,KAAN;AACA,IAAA,cAAM,MAAN;AACA,IAAA,eAAO,KAAK,GAAL,CAAS,CAAT,EAAY,UAAU,CAAV,CAAnB;AACA,IAAA,kBAAU,YAAY,CAAZ;SAJV,CAd2D;AAoB/D,IAAA,QAAI,OAAO;AACP,IAAA,cAAM,KAAN;AACA,IAAA,cAAM,MAAN;AACA,IAAA,eAAO,KAAK,GAAL,CAAS,UAAU,CAAV,EAAa,KAAtB,CAAP;AACA,IAAA,kBAAU,YAAY,KAAZ;SAJV,CApB2D;AA0B/D,IAAA,QAAI,QAAQ,CAAR,EAAW;AACX,IAAA,eAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CADW;SAAf,MAEO,IAAI,QAAQ,CAAR,EAAW;AAClB,IAAA,eAAO,CAAC,IAAD,EAAO;AACV,IAAA,kBAAM,KAAN;AACA,IAAA,kBAAM,OAAN;AACA,IAAA,mBAAO,OAAP;AACA,IAAA,qBAAS,IAAT;aAJG,EAKJ,IALI,CAAP,CADkB;SAAf,MAOA,IAAI,QAAQ,CAAR,EAAW;AAClB,IAAA,eAAO,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAP,CADkB;SAAf;AAGP,IAAA,QAAI,QAAQ,CAAR;YAAW,MAAM,KAAN,CAtCgD;AAuC/D,IAAA,QAAI,SAAS,EAAT;YAAa,QAAQ,EAAR,CAvC8C;AAwC/D,IAAA,QAAI,QAAQ,KAAR,EAAe;AACf,IAAA,iBAAS,CAAC,KAAD,EAAQ,IAAR,CAAT,CADe;AAEf,IAAA,gBAAQ,CAAC,IAAD,EAAO,IAAP,CAAR,CAFe;AAGf,IAAA,iBAAS,CAAT,CAHe;AAIf,IAAA,YAAI,OAAO,KAAK,KAAL,CAAW,QAAQ,CAAR,CAAlB,CAJW;AAKf,IAAA,YAAI,WAAW,IAAX,EAAiB;AACjB,IAAA,kBAAM,KAAN,CADiB;aAArB,MAEO,IAAI,WAAW,QAAQ,IAAR,EAAc;AAChC,IAAA,oBAAQ,QAAQ,KAAR,GAAgB,CAAhB,CADwB;aAA7B,MAEA;AACH,IAAA,oBAAQ,UAAU,IAAV,CADL;AAEH,IAAA,kBAAM,QAAQ,KAAR,GAAgB,CAAhB,CAFH;aAFA;SAPX;AAcA,IAAA,QAAI,QAAQ,EAAR,CAtD2D;AAuD/D,IAAA,SAAK,IAAI,IAAI,KAAJ,EAAW,KAAK,GAAL,EAAU,GAA9B,EAAmC;AAC/B,IAAA,cAAM,IAAN,CAAW;AACP,IAAA,kBAAM,KAAN;AACA,IAAA,kBAAM,CAAN;AACA,IAAA,mBAAO,CAAP;AACA,IAAA,qBAAS,MAAM,OAAN;aAJb,EAD+B;SAAnC;AAQA,IAAA,WAAO,OAAO,MAAP,CAAc,KAAd,EAAqB,KAArB,CAAP,CA/D+D;;;;;"}